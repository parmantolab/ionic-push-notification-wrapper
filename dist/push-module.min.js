angular.module("pushModule",["ionic","saveTokenModule"]).provider("PushService",function(){var e=this;this.parameters={senderID:"",iosAlert:!0,iosBadge:!0,iosSound:!0,iosCategories:{invite:{yes:{callback:window.accept,title:"Accept",foreground:!0,destructive:!1},no:{callback:window.reject,title:"Reject",foreground:!1,destructive:!1}}}},this.setParameters=function(t){e.parameters=angular.merge(e.parameters,t)},this.$get=function(t,o,i,n){t.ready(function(){var t=PushNotification.init({android:{senderID:e.parameters.senderID},ios:{senderID:e.parameters.senderID,alert:e.parameters.iosAlert,badge:e.parameters.iosBadge,sound:e.parameters.iosSound,gcmSandbox:"true",categories:e.parameters.iosCategories},windows:{}});t.on("registration",function(e){var t=window.localStorage.getItem("registrationId");t!==e.registrationId&&(window.localStorage.setItem("registrationId",e.registrationId),i.register(e.registrationId)),console.log(window.localStorage.getItem("registrationId"))}),t.on("notification",function(e){if(n.$broadcast("New Medicine",e.message),e.additionalData.foreground)o.show({title:"Foreground Notification",template:e.message,buttons:[{text:"Ignore",role:"cancel"},{text:"View",onTap:function(){console.log("View the detail")}}]});else{var i=window.localStorage.getItem("pastPushSavedID");e.additionalData.notId!==i&&(window.localStorage.setItem("pastPushSavedID",e.additionalData.notId),o.show({title:"Background Notification",template:e.message,buttons:[{text:"Ignore",role:"cancel"},{text:"View",onTap:function(){console.log("View the detail")}}]}))}t.finish(function(){console.log("processing of push data is finished")},function(){console.log("something went wrong with push.finish for ID = "+e.additionalData.notId)},e.additionalData.notId)}),window.reject=function(){window.alert("Reject Triggred")},window.accept=function(){window.alert("Accept Triggred")}})}}).controller("pushController",["$scope",function(e){e.$on("New Medicine",function(t,o){e.test=o,console.log("Brocast New Message",o)})}]),angular.module("saveTokenModule",[]).service("saveTokenService",function(e,t,o){this.register=function(){t.defer();o.show(),console.log("Send the token to the server"),o.hide()}});